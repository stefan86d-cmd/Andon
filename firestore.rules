rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check the role of the requesting user.
    function isUserRole(role) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }
    
    // Rules for the 'users' collection
    match /users/{userId} {
      // Admins can read any user profile.
      // Any authenticated user can read their own profile.
      allow read: if isUserRole('admin') || request.auth.uid == userId;
      
      // Admins can create and update any user.
      // A user can only update their own profile (but cannot change their own role).
      allow write: if isUserRole('admin') || (request.auth.uid == userId && request.resource.data.role == resource.data.role);
    }
    
    // Rules for the 'issues' collection
    match /issues/{issueId} {
      // Admins and Supervisors can read any issue.
      // Operators can read any issue (so they see all issues on their line).
      allow read: if request.auth != null && (isUserRole('admin') || isUserRole('supervisor') || isUserRole('operator'));
      
      // Any authenticated user can create (report) an issue.
      allow create: if request.auth != null;
      
      // Admins and Supervisors can update issues.
      allow update: if isUserRole('admin') || isUserRole('supervisor');
      
      // Only Admins can delete issues.
      allow delete: if isUserRole('admin');
    }
    
    // Rules for the 'productionLines' collection
    match /productionLines/{lineId} {
      // Any authenticated user can read production line data.
      allow read: if request.auth != null;
      
      // Only Admins can create, update, or delete production lines.
      allow write: if isUserRole('admin');
    }
  }
}